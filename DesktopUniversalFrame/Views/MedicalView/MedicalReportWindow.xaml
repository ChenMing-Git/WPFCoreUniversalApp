<Window x:Class="DesktopUniversalFrame.Views.MedicalView.MedicalReportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:vm="clr-namespace:DesktopUniversalFrame.ViewModel.MedicalViewModel"
        xmlns:medicalCtl="clr-namespace:DesktopUniversalFrame.UserCtl.Medical"     
        xmlns:rule="clr-namespace:DesktopUniversalFrame.Entity.CustomValidationRules"
        xmlns:medicalModel="clr-namespace:DesktopUniversalFrame.Model.MedicalModel"
        xmlns:common="clr-namespace:DesktopUniversalFrame.Common"
        xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
        xmlns:e="clr-namespace:DesktopUniversalFrame.Entity"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:customCtl="clr-namespace:DesktopUniversalCustomControl.CustomComponent;assembly=DesktopUniversalCustomControl"
        mc:Ignorable="d" x:Name="medicalMainWindow"
        Title="医疗报告系统" Height="800" Width="1500"
        ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen"
        Style="{DynamicResource NoneWindow}" Background="{DynamicResource TitleBackground}">

    <Window.Resources>
        <vm:MedicalReportViewModel x:Key="MedicalReportViewModel"/>
        <common:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>
        <medicalModel:PatientExtention x:Key="PatientExtention"/>
        <Storyboard x:Key="CloseStoryboard" Storyboard.TargetName="st">
            <DoubleAnimation Duration="0:0:2" From="1" To="0.2" Storyboard.TargetProperty="ScaleX"/>
            <DoubleAnimation Duration="0:0:2" From="1" To="0.2" Storyboard.TargetProperty="ScaleY"/>
        </Storyboard>
        <LinearGradientBrush x:Key="TitleBackground">
            <GradientStop Color="BlueViolet" Offset="0.2"/>
            <GradientStop Color="LimeGreen" Offset="0.4"/>
            <GradientStop Color="Yellow" Offset="0.6"/>
            <GradientStop Color="Orange" Offset="0.8"/>
        </LinearGradientBrush>
        <Style x:Key="DefaultTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <materialDesign:DialogHost x:Key="Dialog" IsOpen="True">
            <materialDesign:DialogHost.DialogContent>
                我是谁
            </materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>
    </Window.Resources>

    <Window.RenderTransform>
        <ScaleTransform x:Name="st" CenterX="750" CenterY="400" ScaleX="1" ScaleY="1"/>
    </Window.RenderTransform>

    <Window.DataContext>
        <vm:MedicalReportViewModel/>
    </Window.DataContext>

    <behavior:Interaction.Triggers>
        <behavior:EventTrigger EventName="Loaded">
            <behavior:InvokeCommandAction Command="{Binding LoadedWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}"/>
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="MouseMove">
            <behavior:InvokeCommandAction Command="{Binding MoveWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}"/>
        </behavior:EventTrigger>
        <!--<behavior:EventTrigger EventName="MouseLeftButtonUp" SourceName="TitleBorder">
            <behavior:InvokeCommandAction Command="{Binding MaxWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}"/>
        </behavior:EventTrigger>-->
    </behavior:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--标题栏-->
        <Border x:Name="TitleBorder" Grid.Row="0" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="DeepSkyBlue"
                CornerRadius="10,10,0,0" Background="{StaticResource TitleBackground}">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Image Source="/Resource/Medical/Images/medical.png" Width="25" Height="25" Margin="10,0,10,0"/>
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorLevel=1,AncestorType=Window},Path=Title}"
                           Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,50,0"/>
                    <Menu IsMainMenu="True" FontSize="16" Foreground="White" Background="BlueViolet">
                        <MenuItem Header="设置" Height="30">
                            <MenuItem Header="账号"/>
                            <MenuItem Header="主题"/>
                        </MenuItem>
                        <MenuItem Header="帮助" Height="30">
                            <MenuItem Header="项目地址">
                                <Hyperlink NavigateUri="https://gitee.com/ChanceZXY/WPFCoreUniversalApp" Foreground="White" x:Name="gitee"
                                           Command="{Binding GiteeHyperlinkCommand}" CommandParameter="{Binding ElementName=gitee}">Gitee</Hyperlink>
                                <Hyperlink NavigateUri="https://github.com/chancezheng/WpfCoreUniversalApp" Foreground="White" x:Name="github"
                                           Command="{Binding GiteeHyperlinkCommand}" CommandParameter="{Binding ElementName=github}">Github</Hyperlink>
                            </MenuItem>
                            <MenuItem Header="反馈"/>
                            <MenuItem Header="检查更新" x:Name="checkUpdate" Command="{Binding CheckUpdateCommand}" CommandParameter="{Binding ElementName=checkUpdate}"/>
                            <MenuItem Header="关于" x:Name="about" IsCheckable="True"/>
                        </MenuItem>
                    </Menu>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{Binding MinWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}" Style="{DynamicResource MinCaptionButtonStyle}" ToolTip="最小化"/>
                    <Button Command="{Binding NormalWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}" Style="{DynamicResource NormalCaptionButtonStyle}" ToolTip="还原" 
                            Visibility="{Binding ElementName=medicalMainWindow,Path=WindowState,Converter={StaticResource SwitchWindowSizeConverter},ConverterParameter=2}"/>
                    <Button Command="{Binding MaxWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}" Style="{DynamicResource MaxCaptionButtonStyle}" ToolTip="最大化"
                            Visibility="{Binding ElementName=medicalMainWindow,Path=WindowState,Converter={StaticResource SwitchWindowSizeConverter},ConverterParameter=0}"/>
                    <Button Command="{Binding CloseWindowCommand}" CommandParameter="{Binding ElementName=medicalMainWindow}" Style="{DynamicResource CloseCaptionButtonStyle}" ToolTip="关闭"/>
                </StackPanel>
            </Grid>
        </Border>

        <!--Logo-->
        <Grid Grid.Row="1" Grid.Column="0">
            <medicalCtl:MedicalLogo3DControl/>
        </Grid>

        <!--功能选择栏-->
        <Grid Grid.Row="2" Grid.Column="0">
            <ScrollViewer Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding ReportFunctionInfo}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander x:Name="ep" Header="{Binding Function}" HorizontalAlignment="Stretch"
                                  Foreground="BlueViolet" FontSize="20" FontWeight="DemiBold">
                                <ItemsControl ItemsSource="{Binding FunctionItems}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <RadioButton x:Name="rb" Width="190" Height="40" Margin="0,5,4,5" BorderThickness="0"
                                                     Background="BlueViolet" materialDesign:ButtonAssist.CornerRadius="5" 
                                                     Style="{DynamicResource MaterialDesignRaisedDarkButton}"
                                                     Command="{Binding Source={StaticResource DataContextProxy}, Path=Data.FunctionTabSwitch}" 
                                                     CommandParameter="{Binding ElementName=rb}" Tag="{Binding Code}" Cursor="Hand">
                                                <Grid Width="150">
                                                    <Grid.RenderTransform>
                                                        <TransformGroup>
                                                            <TranslateTransform X="0" x:Name="translate"/>
                                                        </TransformGroup>
                                                    </Grid.RenderTransform>
                                                    <TextBlock Text="{Binding Operation}" Background="Transparent" Width="80" TextAlignment="Right" Margin="60,0,0,0"/>
                                                    <materialDesign:PackIcon  Kind="{Binding Icon}" Foreground="White" HorizontalAlignment="Left"/>
                                                </Grid>
                                            </RadioButton>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="DarkViolet" TargetName="rb"/>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="TranslateStoryboard">
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="translate" 
                                                             Storyboard.TargetProperty="X" Duration="0:0:0.2" To="5"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Trigger.EnterActions>
                                                        <StopStoryboard BeginStoryboardName="TranslateStoryboard"/>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Expander>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray" TargetName="ep"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>

        <!--分割线-->
        <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" BorderThickness="5,0,0,0" HorizontalAlignment="Right" BorderBrush="LimeGreen"/>

        <!--信息栏-->
        <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1201*"/>
                <ColumnDefinition Width="99*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <DataGrid ItemsSource="{Binding PatientsInformation}" RowHeaderWidth="0" x:Name="PatientDataGrid" 
                      BorderThickness="0,0,0,1" BorderBrush="DeepSkyBlue" IsReadOnly="True" SelectionMode="Extended"
                      AutoGenerateColumns="False" CanUserSortColumns="True" CanUserAddRows="False" HeadersVisibility="All" Grid.ColumnSpan="2" Margin="0,0,0,30" Grid.RowSpan="2" SelectionChanged="PatientDataGrid_SelectionChanged">
                <behavior:Interaction.Triggers>
                    <behavior:EventTrigger EventName="SelectionChanged">
                        <behavior:InvokeCommandAction Command="{Binding SelectionChangedCommand,Source={StaticResource MedicalReportViewModel}}" 
                                                      CommandParameter="{Binding ElementName=PatientDataGrid}"/>
                    </behavior:EventTrigger>
                    <behavior:EventTrigger EventName="LoadingRow">
                        <behavior:InvokeCommandAction Command="{Binding LoadingRowCommand,Source={StaticResource MedicalReportViewModel}}" 
                                                      CommandParameter="{Binding ElementName=PatientDataGrid}"/>
                    </behavior:EventTrigger>
                </behavior:Interaction.Triggers>
                <DataGrid.ContextMenu>
                    <ContextMenu HasDropShadow="True" x:Name="contextMenu"
                                 materialDesign:ShadowAssist.ShadowEdges="All"
                                 materialDesign:ShadowAssist.ShadowDepth="Depth5">
                        <MenuItem x:Name="watch" Header="查看">
                            <!--Command="{Binding Path=PlacementTarget.DataContext.ContextMenuItemSelectedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"-->
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Eye"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="register" Header="登记">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Register"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="editor" Header="编辑">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Edit"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Background="#594A4A4A"/>
                        <MenuItem x:Name="update" Header="刷新">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="RefreshCircle"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="delete" Header="删除">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="RubbishBinCircle"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <CheckBox HorizontalAlignment="Center" x:Name="SelectedAllChk" Content="全选"
                                      IsChecked="{Binding Path=IsSelectedAllItems,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      Style="{DynamicResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                      Command="{Binding DataContext.SelectedAllCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                      CommandParameter="{Binding ElementName=SelectedAllChk}">
                            </CheckBox>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsSelected,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" x:Name="ItemChk"
                                          Style="{DynamicResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" 
                                          Content="{Binding IndexOfItem}"  HorizontalAlignment="Left"
                                          Command="{Binding DataContext.SelectedThisCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                          CommandParameter="{Binding ElementName=ItemChk}" Margin="2,0,0,0"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <materialDesign:DataGridTextColumn Header="姓名" Binding="{Binding PatientName}"/>
                    <materialDesign:DataGridTextColumn Header="年龄" Binding="{Binding Age}"/>
                    <materialDesign:DataGridTextColumn Header="性别" Binding="{Binding Gender}"/>
                    <materialDesign:DataGridTextColumn Header="电话" Binding="{Binding PhoneNumber}"/>
                    <materialDesign:DataGridTextColumn Header="样本号" Binding="{Binding SampleNumber}"/>
                    <materialDesign:DataGridTextColumn Header="样本类型" Binding="{Binding SampleType}"/>
                    <materialDesign:DataGridTextColumn Header="条形码" Binding="{Binding SampleBarCode}"/>
                    <materialDesign:DataGridTextColumn Header="报告类型" Binding="{Binding ReportType}"/>
                    <materialDesign:DataGridTextColumn Header="状态" Binding="{Binding DiagnoseState}"/>
                    <materialDesign:DataGridTextColumn Header="送检医院" Binding="{Binding InspectHospital}"/>
                    <materialDesign:DataGridTextColumn Header="送检科室" Binding="{Binding InspectDepartment}"/>
                    <materialDesign:DataGridTextColumn Header="送检医生" Binding="{Binding InspectDoctor}"/>
                    <materialDesign:DataGridTextColumn Header="门诊号" Binding="{Binding OutDepartment}"/>
                    <materialDesign:DataGridTextColumn Header="挂号日期" Binding="{Binding RegisterTime,StringFormat={}{0:yyyy-MM-dd}}"/>
                    <materialDesign:DataGridTextColumn Header="导出日期" Binding="{Binding ExportTime,StringFormat={}{0:yyyy-MM-dd}}"/>
                    <materialDesign:DataGridTextColumn Header="打印日期" Binding="{Binding PrintTime,StringFormat={}{0:yyyy-MM-dd}}"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,0,0,0" VerticalAlignment="Center" Grid.ColumnSpan="2">
                <TextBlock Text="选中" Foreground="White"/>
                <TextBlock Text="{Binding SelectedCount}" Foreground="White"/>
                <TextBlock Text="条，总共" Foreground="White"/>
                <TextBlock Text="{Binding PatientsInformation.Count}"  Foreground="White"/>
                <TextBlock Text="条" Foreground="White"/>
            </StackPanel>
        </Grid>

        
        <!--关于-->
        <customCtl:CustomPopupEx x:Name="popVersion" IsOpen="{Binding ElementName=about,Path=IsChecked}" AllowsTransparency="True" Topmost="False"
                                       PopupAnimation="Scroll" Placement="Center" PlacementTarget="{Binding ElementName=medicalMainWindow}">
            <Grid>
                <Border Margin="5" Width="500" Height="400" Style="{DynamicResource popup}"/>
                <Border Width="500" Height="400" CornerRadius="10" Background="DimGray">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="关于医疗报告系统" Margin="5,0,0,0" HorizontalAlignment="Left" Foreground="White"/>
                        <Button Width="30" Height="30" HorizontalAlignment="Right" Margin="0,0,0,0"
                                Command="{Binding PopupCloseCommand}" CommandParameter="{Binding ElementName=popVersion}" 
                                Style="{DynamicResource CaptionButtonStyle}" ToolTip="关闭">
                            <Button.Content>
                                <materialDesign:PackIcon Kind="WindowClose"/>
                            </Button.Content>
                        </Button>
                        <medicalCtl:HelpVersionControl Grid.Row="1"/>
                        <TextBlock Grid.Row="2" Width="280" TextWrapping="Wrap" Foreground="White" HorizontalAlignment="Center"
                                   Text="WPFCoreUniversalApp-Medical 版本1.0.1 ©2020 Chance保留所有权利"/>
                    </Grid>
                </Border>
            </Grid>
        </customCtl:CustomPopupEx>

    </Grid>
</Window>
