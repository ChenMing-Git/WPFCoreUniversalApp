<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:DesktopUniversalFrame.Common">


    <LinearGradientBrush x:Key="TootipBackgroundColor">
        <GradientStop Offset="0.3" Color="LightSalmon"></GradientStop>
        <GradientStop Offset="0.6" Color="Orange"></GradientStop>
        <GradientStop Offset="0.9" Color="OrangeRed"></GradientStop>
    </LinearGradientBrush>
    <!--ToolTip-->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="MinWidth" Value="50"></Setter>
        <Setter Property="MinHeight" Value="30"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Background" Value="{DynamicResource TootipBackgroundColor}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                            CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainWindow" TargetType="{x:Type Window}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CloseStoryboard" Storyboard.TargetName="st">
                            <DoubleAnimation Duration="0:0:1.5" From="1" To="0.2" Storyboard.TargetProperty="ScaleX"/>
                            <DoubleAnimation Duration="0:0:1.5" From="1" To="0.2" Storyboard.TargetProperty="ScaleY"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="RootGrid" Margin="5">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="st" CenterX="750" CenterY="400" ScaleX="1" ScaleY="1"/>
                        </Grid.RenderTransform>
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" RadiusX="10" RadiusY="10">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="90" Color="Gray"></DropShadowEffect>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}" CornerRadius="10" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="attached:AttachedProperty.IsWindowPrepareClosing" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CloseStoryboard}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DocumentViewer" TargetType="{x:Type DocumentViewer}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Focusable="False">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.Background>
                                <SolidColorBrush Color="SaddleBrown" />
                            </Grid.Background>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer Grid.Row="1" CanContentScroll="true" HorizontalScrollBarVisibility="Auto" x:Name="PART_ContentHost" IsTabStop="true">
                                <ScrollViewer.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="BlueViolet"  Offset="0" />
                                        <GradientStop Color="LimeGreen" Offset="1" />
                                    </LinearGradientBrush>
                                </ScrollViewer.Background>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="popup" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="0"></Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect>
                    <DropShadowEffect.RenderingBias>Performance</DropShadowEffect.RenderingBias>
                    <DropShadowEffect.ShadowDepth>0</DropShadowEffect.ShadowDepth>
                    <DropShadowEffect.BlurRadius>10</DropShadowEffect.BlurRadius>
                    <DropShadowEffect.Opacity>0.8</DropShadowEffect.Opacity>
                    <DropShadowEffect.Direction>0</DropShadowEffect.Direction>
                </DropShadowEffect>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="{x:Type DataGrid}" TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <!--该属性指示是否允许用户调整列-->
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Opacity" Value="1.0"></Setter>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#FFDA9D" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="Transparent" />
            </Setter.Value>
        </Setter>
    </Style>
    <!--标题栏样式-->
    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="55" />
        <Setter Property="MaxHeight" Value="55"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="OrangeRed" />
        <Setter Property="Foreground" Value="#FAE4C0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight"  Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Margin="22,0,0,0"  VerticalAlignment="Center"  HorizontalAlignment="Left" />
                            <Path x:Name="SortArrow"  Visibility="Collapsed"  Data="M0,0 L1,0 0.5,1 z"  Stretch="Fill"  Grid.Column="2"    
                                       Width="8" Height="6" Fill="White" Margin="0,0,50,0"    
                                      VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="2" Fill="Transparent" HorizontalAlignment="Left" Grid.ColumnSpan="1" />
                            <TextBlock Grid.Column="0"></TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style x:Key="{x:Type DataGridRow}" TargetType="DataGridRow">
        <Setter Property="Background" Value="#FFFAF2" />
        <Setter Property="MaxHeight" Value="100" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Height" Value="54"></Setter>
        <Setter Property="Foreground" Value="#4A4A4A"/>
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FDDFAD" />
                <Setter Property="Foreground" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5A623"/>
                <Setter Property="Foreground" Value="#4A4A4A" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--单元格样式触发-->
    <Style x:Key="{x:Type DataGridCell}" TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center">    
                                <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F5A623"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="#FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>